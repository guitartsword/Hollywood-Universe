/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KevinBacon;

import java.awt.image.BufferedImage;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseMotionListener;

/**
 *
 * @author Isaias
 */
public class PanelGrafo extends javax.swing.JPanel {
    private Color transparent;
    private BufferedImage background;
    /**
     * Creates new form PanelGrafo
     */
    public PanelGrafo() {
        initComponents();
        transparent = new Color(0,0,0,0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void setTransparentImage(){
        background = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_4BYTE_ABGR);
        for(int i = 0; i < background.getWidth(); i++){
            for (int j = 0; j < background.getHeight(); j++) {
                background.setRGB(i, j, transparent.getRGB());
            }
        }
    }
    public void addImage(BufferedImage image, int x, int y){
        BufferedImage part = background.getSubimage(x, y, image.getWidth(), image.getHeight());
        part.setData(image.getRaster());
        repaint();
        System.out.println("Nueva imagen!");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if(background != null)        {
            g.drawImage(background, 0, 0, this);
        }
    }

    @Override
    public synchronized void addMouseMotionListener(MouseMotionListener l) {
        super.addMouseMotionListener(l); //To change body of generated methods, choose Tools | Templates.
    }
}
